<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">PortalAddonManager</a>
		<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
			<span class="navbar-toggler-icon"></span>
		</button>
	</div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<nav class="flex-column">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Home
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="addonconfigpath">
				<span class="oi oi-plus" aria-hidden="true"></span> Addon Path
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" @onclick="ReadAddonsFolder" href="fetchdata">
				<span class="oi oi-list-rich" aria-hidden="true"></span> Library
			</NavLink>
		</div>
	</nav>
</div>

@code {
    private string[] addons = Array.Empty<string>();
    private string[] disabledAddons = Array.Empty<string>();
    private string[] fullAddonList = Array.Empty<string>();

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ReadAddonsFolder()
    {
        if (AddonPath.portalAddonPath != null)
        {
            addons = Directory.GetFiles(AddonPath.portalAddonPath, "*.vpk");
            disabledAddons = Directory.GetFiles(AddonPath.portalAddonPath, "*.inactive");
            LookForAddons();
        }
    }

    private void LookForAddons()
    {
        // Add each .vpk addon file to the checkedboxlist and set it to active by default if enabled and inactive by default if disabled
        if (addons != null | disabledAddons != null)
        {

            fullAddonList = addons.Concatenate(disabledAddons);

            string? temp2;
            string? temp3;
            string? jsonFile;

            for (int i = 0; i < fullAddonList.Length; i++)
            {
                string? temp = Path.GetFileName(fullAddonList[i]);

                Debug.WriteLine(Path.GetFileName(fullAddonList[i]));

                if (temp.EndsWith(".inactive"))
                {
                    temp2 = temp.Remove(temp.Length - 9, 9);
                    temp3 = temp.Remove(temp.Length - 13, 13);

                    jsonFile = AddonPath.portalAddonPath + "\\" + temp3 + ".json";
                    if (File.Exists(jsonFile))
                    {

                        Debug.WriteLine(jsonFile);

                        using StreamReader file = File.OpenText(jsonFile);

                        JsonSerializer serializer = new JsonSerializer();
                        Addon addon = (Addon)serializer.Deserialize(file, typeof(Addon));

                        if (addon != null)
                        {
                            //checkedListBox1.Items.Insert(i, new Addon { Name = addon.Name, Description = "test" });
                            //checkedListBox1.SetItemChecked(i, false);
                        }

                    }
                    else
                    {
                        //checkedListBox1.Items.Insert(i, new Addon { Name = temp2, Description = "test" });
                        //checkedListBox1.SetItemChecked(i, false);
                    }
                }
                else
                {
                    temp2 = temp;
                    temp3 = temp.Remove(temp.Length - 4, 4);
                    jsonFile = AddonPath.portalAddonPath + "\\" + temp3 + ".json";
                    if (File.Exists(jsonFile))
                    {
                        Debug.WriteLine(jsonFile);
                        using StreamReader file = File.OpenText(jsonFile);

                        JsonSerializer serializer = new JsonSerializer();
                        Addon addon = (Addon)serializer.Deserialize(file, typeof(Addon));

                        if (addon != null)
                        {
                            //checkedListBox1.Items.Insert(i, new Addon { Name = addon.Name, Description = "test" });
                            //checkedListBox1.SetItemChecked(i, true);
                        }
                    }
                    else
                    {
                        //checkedListBox1.Items.Insert(i, new Addon { Name = temp2, Description = "test" });
                        //checkedListBox1.SetItemChecked(i, true);
                    }
                }
            }
        }
    }
}
